# Production Dockerfile with vulnerabilities intact for penetration testing
FROM python:3.12-slim

# Set work directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Install just gunicorn for production - keep vulnerabilities intact
RUN pip install --no-cache-dir gunicorn==23.0.0

# Copy project
COPY . /app/

# Create logs directory for penetration testing analysis
RUN mkdir -p /app/logs

# Create static files directory
RUN mkdir -p /app/staticfiles

# Collect static files (but with vulnerabilities preserved)
RUN python manage.py collectstatic --noinput --clear

# Create non-root user (security best practice, but app still has vulns)
RUN adduser --disabled-password --gecos '' appuser
RUN chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Use gunicorn for production-like serving
CMD ["gunicorn", "connectly.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]